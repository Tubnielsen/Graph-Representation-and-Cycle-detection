My project is far from done. And only have linked_list.c completely done and perfected as much as I could, trying to free everything possible, but still wasn't able to free memory used in add_element, where it, from my tests, used 24 bytes per element added, but fx. using remove_element/remove_first would still free the memory from the element it deleted. So far I have seen there shouldn't be any corner-cases and it should be perfect in functionality. Though it is not perfect in how fast it is or in the memory management department. Specificly the function remove_first(), I have, after deleting the first element, gone through the whole linked_list and used add_element to "push back" each element once, so that the original pointer wouldn't point to NULL after you had used the function at least once. I here couldn't find any more efficient way to fix the problem with the pointer pointing to NULL instead of the first linked_list.

I did not get far in Graph and wasn't able to get a working version. Having problems using the string pointers gotten from fgets() and how to cast them in any way to integers. Couldn't find any other fileread function either, that could be used in this case. And was therefore stuck here, and was not able to complete or partly complete it. And have therefore not been able to go further and try to implement kahn's algorithm either.
